# .github/workflows/deploy.yml
name: Deploy to EC2

on:
  push:
    branches:
      - main  # Triggers on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile.dockerfile  # Specify the Dockerfile path and name
        push: true
        tags: apoorvkuma/finaldev:v1.0

    - name: Deploy to EC2 via SSH
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      run: |
        # Write the SSH key to a file using printf to handle line breaks correctly
        printf "%b" "${EC2_SSH_KEY}" > key.pem
        chmod 600 key.pem

        # SSH into the EC2 instance and deploy
        ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << EOF
          # Pull latest Docker image from Docker Hub
          docker pull apoorvkuma/finaldev:v1.0

          # Stop and remove old container
          docker stop my-web-app || true
          docker rm my-web-app || true

          # Run the new container on port 8080
          docker run -d --name my-web-app -p 8080:8080 apoorvkuma/finaldev:v1.0
        EOF

    - name: Clean up
      run: rm -f key.pem
